"""i18n: store timestamps with timezone

Revision ID: 284240c560f2
Revises: a948d5986c91
Create Date: 2024-08-20 17:05:29.756125

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '284240c560f2'
down_revision = 'a948d5986c91'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('crawl_urls', schema=None) as batch_op:
        batch_op.alter_column('earliest_crawled_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('latest_crawled_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True)

    with op.batch_alter_table('domains', schema=None) as batch_op:
        batch_op.alter_column('approved_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True)

    with op.batch_alter_table('recipe_urls', schema=None) as batch_op:
        batch_op.alter_column('earliest_crawled_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('latest_crawled_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True)

    with op.batch_alter_table('recipes', schema=None) as batch_op:
        batch_op.alter_column('indexed_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True)

    with op.batch_alter_table('redirects', schema='events') as batch_op:
        batch_op.alter_column('logged_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=False)

    with op.batch_alter_table('searches', schema='events') as batch_op:
        batch_op.alter_column('logged_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('searches', schema='events') as batch_op:
        batch_op.alter_column('logged_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)

    with op.batch_alter_table('redirects', schema='events') as batch_op:
        batch_op.alter_column('logged_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)

    with op.batch_alter_table('recipes', schema=None) as batch_op:
        batch_op.alter_column('indexed_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)

    with op.batch_alter_table('recipe_urls', schema=None) as batch_op:
        batch_op.alter_column('latest_crawled_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('earliest_crawled_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)

    with op.batch_alter_table('domains', schema=None) as batch_op:
        batch_op.alter_column('approved_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)

    with op.batch_alter_table('crawl_urls', schema=None) as batch_op:
        batch_op.alter_column('latest_crawled_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('earliest_crawled_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)

    # ### end Alembic commands ###
